% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{pointInPolyCpp}
\alias{pointInPolyCpp}
\title{Point in polygon algorithm (c++)}
\usage{
pointInPolyCpp(vert, geom, invert)
}
\arguments{
\item{vert}{\link[=matrix]{matrix(numeric)}\cr matrix of the coordinates
describing the points, where the first column represents x coordinate
values and the second column y coordinate values.}

\item{geom}{\link[=matrix]{matrix(numeric)}\cr matrix of the coordinates
describing the polygon, where the first column represents x coordinate
values and the second column y coordinate values.}

\item{invert}{\link[=logical]{logical(1)}\cr whether or not to test instead for
points that are outside of the polygon.}
}
\value{
an integer vector of the same length as there are points in
\code{vert} that indicates where the respective point is located.
}
\description{
C++ function that determine whether points are inside, outside or on the
boundary of a polygon.
}
\details{
This is an extension of the below described algorithm. It extends
the "point in polygon" algorithm, which gives values 0 and 1 for points
that are outside or inside of a polygon, respectively, by the values 2 and
3, for points that are on one or two lines (a vertex) of the polygon,
respectively (which is obviously a stark simplification that depends on
the precision of floating-point values, but can be useful in some edge
cases).

http://www.geomalgorithms.com/ Copyright 2000 softSurfer, 2012 Dan Sunday
This code may be freely used and modified for any purpose providing that
this copyright notice is included with it. SoftSurfer makes no warranty
for this code, and cannot be held liable for any real or imagined damage
resulting from its use. Users of this code must verify correctness for
their application.
}
\seealso{
Other topological relationships: 
\code{\link{matInGeomCpp}()}
}
\concept{topological relationships}
